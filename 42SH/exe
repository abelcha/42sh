history/init_history.c:46:  if (!(line->sh->history = init_root_history()))
history/init_history.c:51:    if (add_elem_in_history(line->sh->history) == FAILURE)
history/init_history.c:55:	line->sh->history->prev->data = str;
history/init_history.c:56:	line->sh->history->prev->len = strlen(str);
history/init_history.c:64:  if (my_strcmp(line->line, line->sh->history->prev->data))
history/init_history.c:65:    if (add_elem_in_history(line->sh->history) != FAILURE)
history/init_history.c:67:	line->sh->history->prev->len = line->line_len;
history/init_history.c:68:	if (!(line->sh->history->prev->data = strdup(line->line)))
history/put_in_history.c:26:  tmp = line->sh->history;
history/put_in_history.c:30:  while ((tmp = tmp->next) != line->sh->history)
globbing/get_cmd_data.c:68:  p_tab = line->sh->exe->env->paths;
line_edition/get_line_caps.c:32:	  tcsetattr(0, TCSANOW, &(line->sh->save));
line_edition/get_line_caps.c:51:  line->sh->curr_pos = NULL;
line_edition/get_line_caps.c:76:      tcsetattr(0, TCSANOW, &(line->sh->save));
line_edition/history_key_actions.c:44:  if (!line->sh->curr_pos || line->sh->curr_pos == line->sh->history)
line_edition/history_key_actions.c:46:  if (line->sh->curr_pos->next == line->sh->history)
line_edition/history_key_actions.c:49:    back_to_the_future(line, line->sh->curr_pos->next->data,
line_edition/history_key_actions.c:50:		       line->sh->curr_pos->next->len);
line_edition/history_key_actions.c:51:  line->sh->curr_pos = line->sh->curr_pos->next;
line_edition/history_key_actions.c:57:  if (!line->sh->curr_pos)
line_edition/history_key_actions.c:61:      line->sh->curr_pos = line->sh->history;
line_edition/history_key_actions.c:64:  if (line->sh->curr_pos->prev == line->sh->history)
line_edition/history_key_actions.c:66:  line->sh->curr_pos = line->sh->curr_pos->prev;
line_edition/history_key_actions.c:67:  back_to_the_future(line, line->sh->curr_pos->data, line->sh->curr_pos->len);
line_edition/init_termcaps.c:20:      tcgetattr(0, &(line->sh->save)) < 0 ||
line_edition/init_termcaps.c:21:      tcgetattr(0, &(line->sh->new)) < 0)
line_edition/init_termcaps.c:34:      line->sh->new.c_lflag &= ~(ICANON | ECHO);
line_edition/init_termcaps.c:36:  tcsetattr(0, TCSANOW, &(line->sh->new));
src/signal.c:31:  if (lx->sh->exe->pid)
src/signal.c:32:    kill_sons(lx->sh->exe->pid);
src/clean_all.c:43:  printf("sh->exe = %p\n", sh->exe);
src/clean_all.c:44:  exit_value = sh->exe->exit;
src/clean_all.c:45:  free_exe(sh->exe->env->env_dll);
src/clean_all.c:46:  double_free(sh->exe->env->paths);
src/clean_all.c:47:  double_free(sh->exe->env->envp);
src/clean_all.c:48:  free(sh->exe->env);
src/clean_all.c:49:  free(sh->exe);
src/main.c:33:  while (get_line_caps(sh->line) != FAILURE)
src/main.c:35:      if (!(root = get_tokens(sh->line->line)))
src/main.c:37:      if ((tree = start_parsing(root, sh->exe)))
src/main.c:39:	  exec_cmd(tree, sh->exe);
src/main.c:43:      free(sh->line->line);
src/main.c:44:      if (sh->exe->exit || ++i > 100000)
src/main.c:47:  add_in_history_file(sh->line);
src/main.c:48:  return (clean_all(sh->exe));
src/init_structs.c:78:  if (!(sh->line = init_sline()))
src/init_structs.c:80:  sh->line->sh = sh;
src/init_structs.c:81:  if (!(sh->exe = init_exe(env)))
src/init_structs.c:83:  sh->exe->sh = sh;
src/init_structs.c:84:  if (!(sh->jobs = init_jobs()))
src/init_structs.c:86:  if (!(sh->alias = init_alias()))
src/init_structs.c:88:  if (init_history(sh->line) == FAILURE)
src/init_structs.c:90:  printf("sh->exe = %p\n", sh->exe);
